% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/authentication_provider.R
\name{ui_auth}
\alias{ui_auth}
\title{Authenticate Users Via User Interface}
\usage{
ui_auth(
  users,
  username_label = "Username",
  password_label = "Password",
  title = "Login",
  button_label = "Login",
  username_empty = "Username cannot be empty.",
  password_empty = "Passwort cannot be empty.",
  unauthorized = "The username/password are incorrect."
)
}
\arguments{
\item{users}{a data frame with user authentication information (username and \strong{hashed} password).
See below for details.}

\item{username_label}{label for the username input field.}

\item{password_label}{label for the password input field.}

\item{title}{title of the dialog.}

\item{button_label}{label for the login button.}

\item{username_empty, password_empty}{error messages for empty username/password field.}

\item{unauthorized}{error message for incorrect username/password.}
}
\description{
Present the user with a login interface before the exam begins.
}
\details{
This authentication provider matches the given username and password against the data frame \code{users}.
The data frame \code{users} must have at least two columns: \emph{username} and \emph{password}.
The \emph{password} column must contain \strong{hashed} passwords created with \code{\link[sodium:password]{sodium::password_store()}}
(e.g., \code{sodium::password_store("password")}, or a SHA-256 HMAC created with \code{\link[digest:hmac]{digest::hmac()}}
(\code{digest::hmac("exam_id", "password", algo = "sha256")}).

If the \code{users} data frame also contains columns \emph{display_name} and/or \emph{grading}, they are added to the user object
(and used as described in the \link[=authentication_provider]{authentication provider documentation}).
}
\seealso{
Other access configuration: 
\code{\link{authentication_provider}},
\code{\link{configure_attempts}()},
\code{\link{rsconnect_auth}()}
}
\concept{access configuration}
