% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exercise_evaluators.R
\name{exercise_evaluator}
\alias{exercise_evaluator}
\alias{future_evaluator}
\title{Exercise Evaluator}
\usage{
future_evaluator(expr, envir, label, timeout, ...)
}
\arguments{
\item{expr}{an (un-evaluated) expression to be evaluated.}

\item{envir}{the environment in which \code{expr} is to be evaluated.}

\item{label}{the label of the exercise chunk.}

\item{timeout}{the configured time limit in seconds.}

\item{...}{additional parameters for future extensions.}
}
\value{
a \link[promises:promise]{promise} object, or anything that can be cast to a promise object with
\link[promises:is.promise]{as.promise()}.
}
\description{
Configure how exercises are evaluated.
An exercise evaluator is a function taking the arguments described below and returning a
promise object which will eventually evaluate the user's code.
}
\section{Functions}{
\itemize{
\item \code{future_evaluator()}: evaluate user code in a \link[future:future]{future()} promise. See \code{\link[future:plan]{future::plan()}}
for details on configuring where/how these promises are resolved.

}}
\seealso{
Other exercise configuration: 
\code{\link{exercise_options}()}
}
\concept{exercise configuration}
